DROP TABLE IF EXISTS Friends;
CREATE TABLE Friends (
    id INT,
    friend_id INT 
);


DROP TABLE IF EXISTS Ratings;
CREATE TABLE Ratings (
    id INT PRIMARY KEY,
    rating INT
);

INSERT INTO Friends (id, friend_id)
VALUES
(1, 2),
(1, 3),
(2, 3),
(3, 4),
(4, 1),
(4, 2),
(5,NULL),
(6,NULL);


INSERT INTO Ratings (id, rating)
VALUES
(1, 85),
(2, 90),
(3, 75),
(4, 88),
(5, 82),
(6, 91);


Q) Retrieve all Ids of a person whose rating is greater than friend's id
   If person does not have any friend, retrieve only their id only if rating greater than 85
   
   
WITH cte1 AS (SELECT 
  f.id,
  f.friend_id,
  r.rating
FROM Friends f
LEFT JOIN Ratings r ON f.id = r.id ),

cte2 AS (SELECT 
  f.id,
  f.friend_id,
  r.rating
FROM Friends f
LEFT JOIN Ratings r ON f.friend_id = r.id ),

cte3 AS (SELECT 
  c1.id,
  c1.rating,
  c2.friend_id,
  c2.rating 
FROM cte1 c1 INNER JOIN cte2 c2 ON c1.id = c2.id  
WHERE c1.rating > c2.rating OR c1.rating > 85 )

SELECT 
  DISTINCT (id)
FROM cte3
ORDER BY id


      
